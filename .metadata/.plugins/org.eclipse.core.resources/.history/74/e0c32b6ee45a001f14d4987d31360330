package com.library_management.utils.exception;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.RestControllerAdvice;

import com.library_management.applicationData.models.response.ErrorResponse;

//@ControllerAdvice
@RestControllerAdvice
public class AppExceptionsHandler {
	
	
	  @ExceptionHandler(BookNotFoundException.class)
	    public ResponseEntity<ErrorResponse> handleBookNotFoundException(BookNotFoundException ex) {
	        ErrorResponse errorResponse = new ErrorResponse(HttpStatus.NOT_FOUND.value(), ex.getMessage());
	        return new ResponseEntity<>(errorResponse, HttpStatus.NOT_FOUND);
	    }

	    @ExceptionHandler(PatronNotFoundException.class)
	    public ResponseEntity<ErrorResponse> handlePatronNotFoundException(PatronNotFoundException ex) {
	        ErrorResponse errorResponse = new ErrorResponse(HttpStatus.NOT_FOUND.value(), ex.getMessage());
	        return new ResponseEntity<>(errorResponse, HttpStatus.NOT_FOUND);
	    }

	    @ExceptionHandler(BorrowingRecordNotFoundException.class)
	    public ResponseEntity<ErrorResponse> handleBorrowingRecordNotFoundException(BorrowingRecordNotFoundException ex) {
	        ErrorResponse errorResponse = new ErrorResponse(HttpStatus.BAD_REQUEST.value(), ex.getMessage());
	        return new ResponseEntity<>(errorResponse, HttpStatus.BAD_REQUEST);
	    }

	    @ExceptionHandler(Exception.class)
	    public ResponseEntity<ErrorResponse> handleGenericException(Exception ex) {
	        ErrorResponse errorResponse = new ErrorResponse(HttpStatus.INTERNAL_SERVER_ERROR.value(), "An unexpected error occurred");
	        return new ResponseEntity<>(errorResponse, HttpStatus.INTERNAL_SERVER_ERROR);
	    }

}
